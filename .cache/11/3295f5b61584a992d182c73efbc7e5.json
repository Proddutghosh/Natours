{"id":"../../node_modules/core-js/modules/_string-context.js","dependencies":[{"name":"D:\\Learning\\complete-node-bootcamp-master\\complete-node-bootcamp-master\\4-natours\\after-section-12\\package.json","includedInParent":true,"mtime":1562899314000},{"name":"D:\\Learning\\complete-node-bootcamp-master\\complete-node-bootcamp-master\\4-natours\\after-section-12\\node_modules\\core-js\\package.json","includedInParent":true,"mtime":1573138839793},{"name":"./_is-regexp","loc":{"line":2,"column":23},"parent":"D:\\Learning\\complete-node-bootcamp-master\\complete-node-bootcamp-master\\4-natours\\after-section-12\\node_modules\\core-js\\modules\\_string-context.js","resolved":"D:\\Learning\\complete-node-bootcamp-master\\complete-node-bootcamp-master\\4-natours\\after-section-12\\node_modules\\core-js\\modules\\_is-regexp.js"},{"name":"./_defined","loc":{"line":3,"column":22},"parent":"D:\\Learning\\complete-node-bootcamp-master\\complete-node-bootcamp-master\\4-natours\\after-section-12\\node_modules\\core-js\\modules\\_string-context.js","resolved":"D:\\Learning\\complete-node-bootcamp-master\\complete-node-bootcamp-master\\4-natours\\after-section-12\\node_modules\\core-js\\modules\\_defined.js"}],"generated":{"js":"// helper for String#{startsWith, endsWith, includes}\nvar isRegExp = require('./_is-regexp');\nvar defined = require('./_defined');\n\nmodule.exports = function (that, searchString, NAME) {\n  if (isRegExp(searchString)) throw TypeError('String#' + NAME + \" doesn't accept regex!\");\n  return String(defined(that));\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/core-js/modules/_string-context.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/core-js/modules/_string-context.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/core-js/modules/_string-context.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/core-js/modules/_string-context.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/core-js/modules/_string-context.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/core-js/modules/_string-context.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/core-js/modules/_string-context.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/core-js/modules/_string-context.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/core-js/modules/_string-context.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}}],"sources":{"../../node_modules/core-js/modules/_string-context.js":"// helper for String#{startsWith, endsWith, includes}\nvar isRegExp = require('./_is-regexp');\nvar defined = require('./_defined');\n\nmodule.exports = function (that, searchString, NAME) {\n  if (isRegExp(searchString)) throw TypeError('String#' + NAME + \" doesn't accept regex!\");\n  return String(defined(that));\n};\n"},"lineCount":9}},"error":null,"hash":"8b248af9bf29ef848584d7f8c2ee493d","cacheData":{"env":{}}}